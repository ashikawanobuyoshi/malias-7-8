{"version":3,"file":"upload-DWQ3U13P.js","sources":["../../../../pages/upload.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <input type=\"file\" @change=\"onFileChange\" />\r\n    <client-only>\r\n      <button @click=\"uploadFile\" :disabled=\"!selectedFile\">アップロード</button>\r\n      <p v-if=\"imageUrl\">\r\n        画像URL: <a :href=\"imageUrl\" target=\"_blank\">{{ imageUrl }}</a>\r\n      </p>\r\n    </client-only>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\n\r\nconst selectedFile = ref(null)\r\nconst imageUrl = ref('')\r\n\r\nfunction onFileChange(e) {\r\n  selectedFile.value = e.target.files[0]\r\n}\r\n\r\nasync function uploadFile() {\r\n  if (!selectedFile.value) return\r\n\r\n  const file = selectedFile.value\r\n  const fileName = encodeURIComponent(file.name)\r\n\r\n  try {\r\n    // サーバーからPresigned URLを取得\r\n    const res = await fetch(`/api/presign?fileName=${fileName}`)\r\n    const { url } = await res.json()\r\n\r\n    // 実際にS3へPUT（Content-Type設定）\r\n    const uploadRes = await fetch(url, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': file.type\r\n      },\r\n      body: file\r\n    })\r\n\r\n    if (uploadRes.ok) {\r\n      const s3Url = url.split('?')[0]\r\n      imageUrl.value = s3Url\r\n      localStorage.setItem('image_url', s3Url) // ← 保存\r\n      alert('アップロード成功: ' + s3Url)\r\n    } else {\r\n      alert('アップロード失敗')\r\n    }\r\n  } catch (error) {\r\n    console.error('アップロード中にエラー:', error)\r\n    alert('アップロードに失敗しました。')\r\n  }\r\n}\r\n\r\n// クライアント側でのみlocalStorageから復元\r\nonMounted(() => {\r\n  const savedUrl = localStorage.getItem('image_url')\r\n  if (savedUrl) {\r\n    imageUrl.value = savedUrl\r\n  }\r\n})\r\n</script>\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAeqB,QAAI,IAAI;AACZ,QAAI,EAAE;;;;;;;;;;;;;;;"}