{"version":3,"file":"_id_-NKEhYsoi.js","sources":["../../../../stores/favorites.ts","../../../../utils/jsonUtils.ts","../../../../pages/product-details/[id].vue"],"sourcesContent":["// stores/favorites.ts\r\nimport { defineStore } from 'pinia'\r\n\r\n// stores/favorites.ts\r\nexport interface FavoriteImage {\r\n  fileName: string;\r\n  url: string;\r\n}\r\n\r\nexport const useFavoritesStore = defineStore('favorites', {\r\n  state: () => ({\r\n    favoriteImages: [] as FavoriteImage[],\r\n  }),\r\n  actions: {\r\n    addFavorite(image: FavoriteImage) {\r\n      this.favoriteImages.push(image);\r\n    },\r\n    removeFavorite(index: number) {\r\n      this.favoriteImages.splice(index, 1);\r\n    }\r\n  },\r\n  persist: true\r\n});\r\n\r\n\r\n","export function serializeJson(data: any): string {\r\n  try {\r\n    return JSON.stringify(data);\r\n  } catch (error) {\r\n    console.error(\"シリアライズエラー:\", error);\r\n    return \"[]\";\r\n  }\r\n}\r\n\r\nexport function deserializeJson(jsonString: string): any {\r\n  try {\r\n    return JSON.parse(jsonString);\r\n  } catch (error) {\r\n    console.error(\"デシリアライズエラー:\", error);\r\n    return [];\r\n  }\r\n}","<template>\r\n  <div v-if=\"product\">\r\n    <h1>{{ product.productName }}</h1>\r\n    <p>{{ product.description }}</p>\r\n  </div>\r\n  <div v-else>\r\n    <p>商品情報を読み込み中です...</p>\r\n  </div>\r\n  <main class=\"pb-24\">\r\n    <div class=\"p-4 space-y-6\">\r\n      <!-- 戻るボタン -->\r\n      <button @click=\"handleGoBack\" class=\"px-4 py-2 bg-gray-200 rounded\">\r\n        ← 戻る\r\n      </button>\r\n\r\n      <!-- 商品詳細 -->\r\n      <div v-if=\"plainProduct\" class=\"space-y-4\">\r\n        <h2 class=\"text-2xl font-bold\">{{ plainProduct.productName }}</h2>\r\n        <img :src=\"plainProduct.src\" alt=\"\" class=\"w-full max-w-sm rounded\" />\r\n        <p class=\"whitespace-pre-line\">{{ plainProduct.description }}</p>\r\n      </div>\r\n\r\n      <!-- お気に入り画像一覧 -->\r\n      <div class=\"favorites-gallery\">\r\n        <h3 class=\"text-xl font-semibold mb-4 text-gray-800 border-b pb-2\">\r\n          📷 お気に入り画像一覧\r\n        </h3>\r\n\r\n        <div\r\n          v-if=\"favoritesStore.favoriteImages.length === 0\"\r\n          class=\"text-gray-600\"\r\n        >\r\n          お気に入り画像はありません\r\n        </div>\r\n\r\n        <!-- 画像があるとき -->\r\n        <div v-else class=\"favorites-list flex flex-wrap gap-4\">\r\n          <div\r\n            v-for=\"(favImg, index) in favoritesStore.favoriteImages\"\r\n            :key=\"index\"\r\n            class=\"favorite-item border p-4 rounded shadow-sm w-60 flex flex-col items-center bg-white\"\r\n          >\r\n            <!-- 画像表示 -->\r\n            <div\r\n              class=\"w-40 h-40 flex items-center justify-center bg-gray-50 rounded mb-3 border\"\r\n            >\r\n              <img\r\n                :src=\"favImg.url\"\r\n                alt=\"お気に入り画像\"\r\n                class=\"max-w-full h-auto object-contain rounded border\"\r\n              />\r\n            </div>\r\n\r\n            <!-- ファイル名 -->\r\n            <p\r\n              class=\"font-medium mb-2 text-center break-words w-full text-gray-700\"\r\n            >\r\n              ファイル名: {{ favImg.fileName }}\r\n            </p>\r\n\r\n            <!-- 商品IDが1のときのみ表示される注文フォーム -->\r\n            <div v-if=\"productId === '1'\" class=\"w-full\">\r\n              <!-- プリント種類セレクター -->\r\n              <label class=\"block mb-2 w-full text-sm text-gray-700\">\r\n                <span class=\"block mb-1 font-semibold\">プリント種類:</span>\r\n                <select\r\n                  v-model=\"favImg.selectedType\"\r\n                  class=\"border rounded px-2 py-1 w-full\"\r\n                >\r\n                  <option disabled value=\"\">選択してください</option>\r\n                  <option value=\"四つ切\">四つ切</option>\r\n                  <option value=\"六切り\">六切り</option>\r\n                  <option value=\"キャビネ\">キャビネ</option>\r\n                  <option value=\"手札\">手札</option>\r\n                </select>\r\n              </label>\r\n\r\n              <!-- 枚数入力 -->\r\n              <label class=\"block mb-2 w-full text-sm text-gray-700\">\r\n                <span class=\"block mb-1 font-semibold\">枚数:</span>\r\n                <input\r\n                  type=\"number\"\r\n                  v-model.number=\"favImg.quantity\"\r\n                  min=\"1\"\r\n                  class=\"border rounded px-2 py-1 w-full\"\r\n                />\r\n              </label>\r\n\r\n              <!-- 小計 -->\r\n              <p class=\"mt-2 font-semibold text-gray-800 text-center w-full\">\r\n                小計: ¥{{\r\n                  calculatePrice(\r\n                    favImg.selectedType,\r\n                    favImg.quantity\r\n                  ).toLocaleString()\r\n                }}\r\n              </p>\r\n\r\n              <!-- 注文ボタン -->\r\n              <button\r\n                class=\"mt-3 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 w-full\"\r\n                @click=\"orderImage(favImg)\"\r\n              >\r\n                注文する\r\n              </button>\r\n            </div>\r\n\r\n            <!-- 削除ボタン -->\r\n            <button\r\n              @click=\"removeFavorite(index)\"\r\n              class=\"text-red-600 font-bold text-xl mt-4\"\r\n              title=\"削除\"\r\n            >\r\n              ×\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 追加オプション -->\r\n      <div>\r\n        <h3 class=\"text-lg font-semibold mt-6\">オプション選択</h3>\r\n\r\n        <!-- 2列のグリッド -->\r\n        <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4 mt-4\">\r\n          <div\r\n            v-for=\"(item, index) in additionalItems\"\r\n            :key=\"index\"\r\n            class=\"flex items-center border p-2 rounded shadow-sm bg-white\"\r\n          >\r\n            <!-- 左: 画像 -->\r\n            <img\r\n              v-if=\"item.image\"\r\n              :src=\"item.image\"\r\n              alt=\"オプション画像\"\r\n              class=\"w-20 h-20 object-contain mr-4\"\r\n            />\r\n\r\n            <!-- 右: チェックボックスと説明 -->\r\n            <div class=\"flex-1\">\r\n              <label class=\"flex items-start\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  v-model=\"item.selected\"\r\n                  class=\"mr-2 mt-1\"\r\n                  @change=\"onSelectChange(item)\"\r\n                />\r\n                <span class=\"font-medium text-gray-800\">\r\n                  {{ item.name }}（+¥{{ item.price.toLocaleString() }}）\r\n                </span>\r\n              </label>\r\n\r\n              <!-- 説明文 -->\r\n              <p\r\n                v-if=\"item.description\"\r\n                class=\"text-sm text-gray-600 mt-1\"\r\n                v-html=\"item.description\"\r\n              ></p>\r\n\r\n              <!-- ✅ 数量入力（選択された場合のみ表示） -->\r\n              <div\r\n                v-if=\"item.selected\"\r\n                class=\"mt-2 flex items-center space-x-2\"\r\n              >\r\n                <button\r\n                  class=\"px-2 py-1 bg-gray-200 rounded\"\r\n                  @click=\"decreaseQuantity(item)\"\r\n                >\r\n                  －\r\n                </button>\r\n\r\n                <input\r\n                  type=\"number\"\r\n                  v-model.number=\"item.quantity\"\r\n                  min=\"1\"\r\n                  class=\"w-16 text-center border rounded\"\r\n                />\r\n\r\n                <button\r\n                  class=\"px-2 py-1 bg-gray-200 rounded\"\r\n                  @click=\"increaseQuantity(item)\"\r\n                >\r\n                  ＋\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- カスタムアイテム入力欄 -->\r\n        <div class=\"space-y-4 border p-4 rounded bg-gray-50\">\r\n          <div>\r\n            <label class=\"block text-sm font-medium mb-1\">ファイル名</label>\r\n            <input\r\n              v-model=\"newCustomItem.fileName\"\r\n              placeholder=\"例: custom.jpg\"\r\n              class=\"border p-2 w-full rounded\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label class=\"block text-sm font-medium mb-1\">名前</label>\r\n            <input\r\n              v-model=\"newCustomItem.name\"\r\n              placeholder=\"例: 特注アルバム\"\r\n              class=\"border p-2 w-full rounded\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label class=\"block text-sm font-medium mb-1\">価格（円）</label>\r\n            <input\r\n              type=\"number\"\r\n              v-model.number=\"newCustomItem.price\"\r\n              placeholder=\"例: 12000\"\r\n              class=\"border p-2 w-full rounded\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label class=\"block text-sm font-medium mb-1\">数量</label>\r\n            <input\r\n              type=\"number\"\r\n              v-model.number=\"newCustomItem.quantity\"\r\n              placeholder=\"1\"\r\n              min=\"1\"\r\n              class=\"border p-2 w-full rounded\"\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            @click=\"addCustomItem\"\r\n            class=\"px-4 py-2 bg-blue-600 text-white rounded\"\r\n          >\r\n            カスタムアイテムを追加\r\n          </button>\r\n        </div>\r\n\r\n        <!-- ✅ 追加済みオプション表示 -->\r\n        <div v-if=\"selectedAdditionalItems.length > 0\" class=\"mt-4 space-y-2\">\r\n          <h4 class=\"text-lg font-semibold\">追加済みオプション</h4>\r\n          <div\r\n            v-for=\"(item, index) in selectedAdditionalItems\"\r\n            :key=\"index\"\r\n            class=\"border p-2 rounded flex justify-between items-center\"\r\n          >\r\n            <div>\r\n              {{ item.name }} - ¥{{ item.price.toLocaleString() }} ×\r\n              {{ item.quantity }}\r\n            </div>\r\n            <button\r\n              @click=\"\r\n                () => {\r\n                  item.selected = false;\r\n                  item.quantity = 0;\r\n                }\r\n              \"\r\n              class=\"text-red-600 underline\"\r\n            >\r\n              削除\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 登録済みカスタムアイテム一覧 -->\r\n        <div v-if=\"customItems.length > 0\" class=\"mt-4 space-y-2\">\r\n          <h4 class=\"text-lg font-semibold\">追加済みアイテム</h4>\r\n          <div\r\n            v-for=\"(item, index) in customItems\"\r\n            :key=\"index\"\r\n            class=\"border p-2 rounded flex justify-between items-center\"\r\n          >\r\n            <div>\r\n              {{ item.fileName || item.name }} - ¥{{\r\n                item.price.toLocaleString()\r\n              }}\r\n              × {{ item.quantity }}\r\n            </div>\r\n            <button\r\n              @click=\"customItems.splice(index, 1)\"\r\n              class=\"text-red-600 underline\"\r\n            >\r\n              削除\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 合計金額 -->\r\n      <div>\r\n        <p>合計金額（税抜）：¥{{ totalPrice.toLocaleString() }}</p>\r\n        <p class=\"font-bold\">\r\n          合計金額（税込）：¥{{ totalPriceWithTax.toLocaleString() }}\r\n        </p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 注文フォーム -->\r\n    <div class=\"space-y-2 pb-32\">\r\n      <h3 class=\"text-xl font-semibold\">お客様情報</h3>\r\n\r\n      <input\r\n        v-model=\"form.customerName\"\r\n        placeholder=\"お名前（必須）\"\r\n        class=\"w-full border p-2 rounded\"\r\n        :class=\"{ 'border-red-500': !form.customerName && formTouched }\"\r\n      />\r\n\r\n      <input\r\n        v-model=\"form.email\"\r\n        placeholder=\"メールアドレス（必須）\"\r\n        class=\"w-full border p-2 rounded\"\r\n        :class=\"{\r\n          'border-red-500':\r\n            (!form.email || !emailRegex.test(form.email)) && formTouched,\r\n        }\"\r\n      />\r\n\r\n      <textarea\r\n        v-model=\"form.comment\"\r\n        placeholder=\"備考（例：お写真の貼る順番 1:左 2:中央 3:右）\"\r\n        class=\"w-full border p-2 rounded h-24\"\r\n      ></textarea>\r\n\r\n      <p v-if=\"success\" class=\"text-green-600 font-semibold\">\r\n        ご注文ありがとうございました！確認メールを送信しました。\r\n      </p>\r\n      <p v-if=\"error\" class=\"text-red-600 font-semibold\">\r\n        {{ error }}\r\n      </p>\r\n    </div>\r\n  </main>\r\n\r\n  <!-- 注文ボタンを画面下に固定 -->\r\n  <div\r\n    class=\"fixed bottom-0 left-0 right-0 bg-white border-t border-gray-200 p-4 z-50\"\r\n  >\r\n    <button\r\n      @click=\"submitOrder\"\r\n      :disabled=\"isSubmitting\"\r\n      class=\"w-full px-4 py-3 bg-green-500 text-white rounded-lg font-semibold text-lg hover:bg-green-600 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n    >\r\n      {{ isSubmitting ? \"送信中...\" : \"注文を確定する\" }}\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, computed, watch } from \"vue\";\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport { useAsyncData } from \"#app\";\r\nimport { useFavoritesStore } from \"~/stores/favorites\";\r\nimport type { OptionItem } from \"~/types/OptionItem\";\r\nimport type { CustomItem } from \"~/types/CustomItem\";\r\n\r\n// -------------------- ルート＆ルーター --------------------\r\nconst route = useRoute();\r\nconst router = useRouter();\r\nconst isSubmitting = ref(false);\r\nconst productId = computed(() => route.params.id?.toString() ?? \"\");\r\n\r\nwatchEffect(() => {\r\n  console.log(\"🧪 typeof productId:\", typeof productId);         // → object（computedの型）\r\n  console.log(\"🧪 typeof productId.value:\", typeof productId.value); // → string または undefined\r\n  console.log(\"🧪 productId.value:\", productId.value);\r\n  if (!productId.value || productId.value === \"undefined\") {\r\n    console.warn(\"Invalid product ID:\", productId.value);\r\n    router.replace(\"/\");\r\n  }\r\n});\r\n// -------------------- 商品ID --------------------\r\n\r\nconsole.log(\"Product ID:\", productId.value);\r\n\r\n// -------------------- 商品情報 --------------------\r\nconst { data: product } = await useAsyncData(\"product\", () => {\r\n  const id = String(route.params.id ?? \"\");\r\n  return $fetch(`/api/products/${id}`);\r\n});\r\n\r\n// -------------------- 戻るボタン --------------------\r\nconst handleGoBack = () => {\r\n  if (window.history.length > 1) {\r\n    router.back();\r\n  } else {\r\n    router.push(\"/\"); // or a fallback route\r\n  }\r\n};\r\n\r\n// -------------------- ストアとカスタム項目 --------------------\r\nconst favoritesStore = useFavoritesStore();\r\nconst additionalItems = ref<OptionItem[]>([]);\r\nconst customItems = ref<CustomItem[]>([]);\r\n\r\n// -------------------- プレーン商品（初期値） --------------------\r\nconst plainProduct = ref({ name: \"商品名\", price: 0 });\r\n\r\n// -------------------- ルート変更時や初期表示時のフェッチ --------------------\r\nwatch(\r\n  () => productId.value,\r\n  async (newId) => {\r\n    if (!newId) {\r\n      console.warn(\"productId is undefined or empty. Fetch skipped.\");\r\n      return;\r\n    }\r\n\r\n console.log(\"🧪 Fetch対象の productId:\", newId); // ← 追加\r\n\r\n\r\n    try {\r\n      const res = await $fetch(`/api/print-options?productId=${newId}`);\r\n       console.log(\"📦 print-options APIレスポンス:\", res); // ← レスポンス確認\r\n\r\n      additionalItems.value = res.map((item: any) => ({\r\n        ...item,\r\n        selected: false,\r\n        quantity: 0,\r\n      }));\r\n    } catch (error) {\r\n      console.error(\"❌ print-options の取得に失敗:\", error);\r\n    }\r\n  },\r\n  { immediate: true }\r\n);\r\n\r\n// -------------------- 型定義 --------------------\r\ninterface Product {\r\n  id: number;\r\n  src: string;\r\n  productName: string;\r\n  description: string;\r\n  price: string;\r\n}\r\ninterface CustomItem {\r\n  name: string;\r\n  price: number;\r\n  quantity: number;\r\n}\r\ninterface PrintOption {\r\n  id: number;\r\n  label: string;\r\n  value: string;\r\n}\r\ninterface FavoriteImage {\r\n  fileName: string;\r\n  url: string;\r\n  selectedType?: string;\r\n  selectedSize?: string;\r\n  quantity?: number;\r\n}\r\ninterface OptionItem {\r\n  id: number;\r\n  label: string;\r\n  value: string;\r\n  price: number;\r\n  selected?: boolean; // ✅ ← これが必要\r\n}\r\n// -------------------- データ --------------------\r\nconst products: Product[] = [\r\n  {\r\n    src: \"/option-images/print/printo_nomi.jpg\",\r\n    productName: \"プリント\",\r\n    description: `サイズ\r\n四切りプリント 254㎜×305㎜\r\n六切りプリント 205㎜×254㎜\r\nキャビネプリント 180㎜×127㎜\r\n手札プリント 127㎜×89㎜\r\n\r\n四切りプリント 5,800 円（6,380 円 税込）\r\n六切りプリント 4,800 円（5,280 円 税込）\r\nキャビネプリント 3,800 円（4,180 円 税込）\r\n手札プリント 3,500 円（3,850 円 税込）`,\r\n    productId: 1,\r\n  },\r\n  {\r\n    src: \"/option-images/print/cd_puran.jpg\",\r\n    description: `CDプラン\r\n\r\nCD三万プラン\r\n32,780 円（36,080 円 税込）\r\n\r\nCD五万プラン\r\n49,800 円（54,780 円 税込）\r\n\r\nCD七万プラン\r\n69,800 円（76,780 円 税込）`,\r\n    productId: 2,\r\n  },\r\n  {\r\n    src: \"/option-images/print/photo_collection.jpg\",\r\n    description: `＊デザインアルバム\r\n6P(24カット)＋CD原本＝49,800円（54,780円 税込）\r\n＊絵本BOOK\r\n4P（6カット）＋CD原本＝34,800円（38,280円 税込）\r\n＊プレミアムデザインアルバム\r\n6P(24カット)＋CD原本＝49,800円（54,780円 税込）`,\r\n    productId: 3,\r\n  },\r\n  {\r\n    src: \"/option-images/print/6tsugiri_3.jpg\",\r\n    description: `お宮参りプラン\r\n＊お宮参りプラン：A\r\n49,800円（54,780円 税込）\r\n＊お宮参りプラン：B\r\n65,000円（71,500円 税込）\r\n＊お宮参りプラン：C\r\n32,100円（35,310円 税込）\r\n＊お宮参りプラン：D\r\n50,000円（55,000円 税込）\r\n＊お宮参りプラン：E\r\n54,800円（60,280円 税込）\r\n＊お宮参りプラン：F\r\n60,000円（66,000円 税込）\r\n＊お宮参りプラン：スペシャルセット\r\n80,000円（88,000円 税込）`,\r\n    productId: 4,\r\n  },\r\n  {\r\n    src: \"/option-images/print/4tsugiri_3.jpg\",\r\n    description: `七五三ＣＤセットプラン\r\n＊七五三ＣＤプラン：A\r\n32,800 円（36,080円）\r\n＊七五三ＣＤプラン：B\r\n49,800 円（54,780円）\r\n＊七五三ＣＤプラン：C\r\n69,800 円（76,780円））`,\r\n    productId: 5,\r\n  },\r\n  {\r\n    src: \"/option-images/print/6tsugiri_3.jpg\",\r\n    description: `六つ切りプリント\r\n＊プリント料金 4,800 円（5,280 円 税込）\r\n＊紙台紙付プリント料金 6,800 円（7,480 円 税込）`,\r\n    style: { width: \"170px\", height: \"auto\" },\r\n    productId: 6,\r\n  },\r\n  {\r\n    src: \"/option-images/print/4tsugiri_3.jpg\",\r\n    description: `四つ切りプリント\r\n＊プリント料金 5,800 円（6,380 円 税込）\r\n＊紙台紙付プリント料金 7,800 円（8,580 円 税込）\r\n＊額付プリント料金 8,550 円（9,405 円 税込）`,\r\n    productId: 7,\r\n  },\r\n  {\r\n    src: \"/option-images/print/6tsugiri_3.jpg\",\r\n    description: `六つ切りプリント\r\n＊プリント料金 4,800 円（5,280 円 税込）\r\n＊紙台紙付プリント料金 6,800 円（7,480 円 税込）`,\r\n    style: { width: \"170px\", height: \"auto\" },\r\n    productId: 8,\r\n  },\r\n  {\r\n    src: \"/option-images/print/4tsugiri_3.jpg\",\r\n    description: `四つ切りプリント\r\n＊プリント料金 5,800 円（6,380 円 税込）\r\n＊紙台紙付プリント料金 7,800 円（8,580 円 税込）\r\n＊額付プリント料金 8,550 円（9,405 円 税込）`,\r\n    productId: 9,\r\n  },\r\n  {\r\n    src: \"/option-images/print/6tsugiri_3.jpg\",\r\n    description: `六つ切りプリント\r\n＊プリント料金 4,800 円（5,280 円 税込）\r\n＊紙台紙付プリント料金 6,800 円（7,480 円 税込）`,\r\n    style: { width: \"170px\", height: \"auto\" },\r\n    productId: 10,\r\n  },\r\n];\r\n\r\n// -------------------- お気に入り画像 --------------------\r\nonMounted(() => {\r\n  const stored = localStorage.getItem(\"favoriteImages\");\r\n  if (stored) {\r\n    try {\r\n      favoritesStore.favoriteImages = deserializeJson(stored);\r\n    } catch (e) {\r\n      console.error(\"復元失敗:\", e);\r\n    }\r\n  }\r\n});\r\nwatch(\r\n  () => favoritesStore.favoriteImages,\r\n  (val) => {\r\n    localStorage.setItem(\"favoriteImages\", serializeJson(val));\r\n  },\r\n  { deep: true }\r\n);\r\n\r\n// -------------------- 単価と金額計算 --------------------\r\nfunction calculatePrice(type?: string, quantity?: number): number {\r\n  const prices: Record<string, number> = {\r\n    四つ切: 5800,\r\n    六切り: 4800,\r\n    キャビネ: 3800,\r\n    手札: 3500,\r\n  };\r\n  if (!type || !quantity) return 0;\r\n  return prices[type] * quantity;\r\n}\r\n\r\n// ✅ ここに貼り付け\r\nfunction orderImage(img: FavoriteImage) {\r\n  if (!img.selectedType || !img.quantity || img.quantity < 1) {\r\n    alert(\"プリント種類と枚数を正しく入力してください。\");\r\n    return;\r\n  }\r\n\r\n  // 注文処理（今回はログ出力）\r\n  console.log(\"注文された画像:\", img);\r\n}\r\n\r\n// -------------------- お気に入り削除処理 --------------------\r\nconst removeFavorite = (index: number) => {\r\n  favoritesStore.favoriteImages.splice(index, 1);\r\n};\r\n\r\n// -------------------- 追加オプション --------------------\r\n// server/print-options.tsへ----------\r\n\r\ntype AdditionalItem = {\r\n  name: string;\r\n  price: number;\r\n  image?: string;\r\n  description?: string;\r\n  selected: boolean;\r\n  quantity: number;\r\n};\r\n\r\n// ✅ チェック状態と数量制御\r\nconst onSelectChange = (item: AdditionalItem) => {\r\n  if (item.selected && item.quantity === 0) {\r\n    item.quantity = 1;\r\n  } else if (!item.selected) {\r\n    item.quantity = 0;\r\n  }\r\n};\r\n\r\nconst increaseQuantity = (item: AdditionalItem) => {\r\n  item.quantity++;\r\n};\r\n\r\nconst decreaseQuantity = (item: AdditionalItem) => {\r\n  if (item.quantity > 1) {\r\n    item.quantity--;\r\n  }\r\n};\r\n\r\n// ✅ 選択されたアイテムのみにフィルター\r\nconst selectedAdditionalItems = computed(() =>\r\n  additionalItems.value.filter((item) => item.selected && item.quantity > 0)\r\n);\r\n\r\n// ✅ オプション合計（任意）\r\nconst additionalTotal = computed(() =>\r\n  selectedAdditionalItems.value.reduce(\r\n    (sum, item) => sum + item.price * item.quantity,\r\n    0\r\n  )\r\n);\r\n\r\n// -------------------- カスタムアイテム --------------------\r\nconst newCustomItem = ref<CustomItem>({\r\n  name: \"\",\r\n  price: 0,\r\n  quantity: 1,\r\n  fileName: \"\",\r\n});\r\n\r\nconst addCustomItem = () => {\r\n  const item = newCustomItem.value;\r\n  if (\r\n    item.fileName &&\r\n    item.name.trim() !== \"\" &&\r\n    item.price > 0 &&\r\n    item.quantity > 0\r\n  ) {\r\n    customItems.value.push({ ...item });\r\n    newCustomItem.value = { name: \"\", price: 0, quantity: 1, fileName: \"\" };\r\n  } else {\r\n    alert(\"ファイル名、名前、価格、数量をすべて入力してください。\");\r\n  }\r\n};\r\n\r\n// -------------------- 印刷オプション取得 --------------------\r\nconst printOptions = ref<PrintOption[]>([]);\r\n\r\n// ページ読み込み時にAPIから取得\r\nonMounted(async () => {\r\n  try {\r\n    const data = await $fetch<OptionItem[]>(\"/api/print-options\", {\r\n      params: { productId },\r\n    });\r\n\r\n    // quantity を明示的に追加（初期化）\r\n    additionalItems.value = data.map((item) => ({\r\n      ...item,\r\n      quantity: 1,\r\n    }));\r\n  } catch (err) {\r\n    console.error(\"追加オプションの取得に失敗しました:\", err);\r\n  }\r\n});\r\n\r\n// -------------------- 合計金額計算 --------------------\r\nconst TAX_RATE = 0.1;\r\n\r\nconst totalPrice = computed(() => {\r\n  const favTotal = Array.isArray(favoritesStore.favoriteImages)\r\n    ? favoritesStore.favoriteImages.reduce(\r\n        (sum, img) => sum + calculatePrice(img.selectedType, img.quantity),\r\n        0\r\n      )\r\n    : 0;\r\n\r\n  const customTotal = (customItems.value ?? []).reduce(\r\n    (sum, item) => sum + item.price * item.quantity,\r\n    0\r\n  );\r\n\r\n  const optionTotal = (additionalItems.value ?? []).reduce(\r\n    (sum, item) =>\r\n      item.selected && item.quantity && item.price\r\n        ? sum + item.price * item.quantity\r\n        : sum,\r\n    0\r\n  );\r\n\r\n  return favTotal + customTotal + optionTotal;\r\n});\r\nconst totalPriceWithTax = computed(() =>\r\n  Math.round(totalPrice.value * (1 + TAX_RATE))\r\n);\r\n\r\n// -------------------- メール送信 --------------------\r\n\r\nconst { sendEmail: sendRealEmail } = useSendEmail();\r\nconst ADMIN_EMAILS = [\"info@syashin8.com\"];\r\n\r\nconst form = ref({\r\n  customerName: \"\",\r\n  email: \"\",\r\n  address: \"\",\r\n  comment: \"\",\r\n});\r\n\r\nconst success = ref(false);\r\nconst error = ref(\"\");\r\n\r\nconst emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\r\nconst sendEmailWrapper = async (orderDetails: any) => {\r\n\r\n   console.log(\"🧪 orderDetails.images:\", orderDetails?.images);\r\n\r\n  const recipients = [\r\n    ...(orderDetails.address ? [orderDetails.address] : []),\r\n    ...ADMIN_EMAILS,\r\n  ];\r\n\r\n  const subject = \"【注文確定】ご注文ありがとうございます\";\r\n\r\n  // ✅ 注文商品一覧\r\nconst hasItems = Array.isArray(orderDetails.items) && orderDetails.items.length > 0;\r\nconst hasImages = Array.isArray(orderDetails.images) && orderDetails.images.length > 0;\r\n\r\nlet itemsHtml = \"\";\r\n\r\nif (hasItems) {\r\n  itemsHtml = `\r\n    <ul>\r\n      ${orderDetails.items.map((item: any) => {\r\n        return `\r\n          <li>\r\n            ${item.fileName ? `ファイル名: ${item.fileName}<br>` : \"\"}\r\n            ${item.name || \"\"} × ${item.quantity || 1}：¥${(item.price || 0).toLocaleString()}\r\n          </li>\r\n        `;\r\n      }).join(\"\")}\r\n    </ul>\r\n  `;\r\n} else if (!hasImages) {\r\n  // items も images もないときだけ出す\r\n  itemsHtml = \"<p>画像の注文はありません。</p>\";\r\n}\r\n\r\n  // ✅ 追加オプション\r\n  const additionalHtml = Array.isArray(orderDetails.additionalItems) && orderDetails.additionalItems.length\r\n    ? `\r\n    <p><strong>【追加オプション】</strong></p>\r\n    <ul>\r\n      ${orderDetails.additionalItems.map((opt: any) => {\r\n        return `\r\n          <li>${opt.label} × ${opt.quantity}：¥${(opt.price * opt.quantity).toLocaleString()}</li>\r\n        `;\r\n      }).join(\"\")}\r\n    </ul>\r\n  `\r\n    : \"\";\r\n\r\n  // ✅ カスタムアイテム\r\n  const customHtml = Array.isArray(orderDetails.customItems) && orderDetails.customItems.length\r\n    ? `\r\n    <p><strong>【カスタムアイテム】</strong></p>\r\n    <ul>\r\n      ${orderDetails.customItems.map((item: any) => {\r\n        return `\r\n          <li>\r\n            ファイル名: ${item.fileName || \"（ファイル名不明）\"}<br>\r\n            ${item.name || \"（名称未設定）\"} × ${item.quantity || 1}：¥${((item.price || 0) * (item.quantity || 1)).toLocaleString()}\r\n          </li>\r\n        `;\r\n      }).join(\"\")}\r\n    </ul>\r\n  `\r\n    : \"\";\r\n\r\n  // ✅ お気に入り画像（画像URLの一覧を表示）\r\n  const imageListHtml = Array.isArray(orderDetails.images) && orderDetails.images.length\r\n    ? `\r\n    <p><strong>【お気に入り画像】</strong></p>\r\n    <ul>\r\n      ${orderDetails.images.map((img: any, index: number) => {\r\n        return `<li>画像 ${index + 1}: <a href=\"${img.url}\" target=\"_blank\">${img.filename || img.url}</a></li>`;\r\n      }).join(\"\")}\r\n    </ul>\r\n  `\r\n    : \"\";\r\n\r\n  // ✅ 備考\r\n  const commentHtml = orderDetails.comment\r\n    ? `<p>備考　お写真の貼り順等:<br>${orderDetails.comment.replace(/\\n/g, \"<br>\")}</p>`\r\n    : \"\";\r\n\r\n  // ✅ 合計金額\r\n  const totalHtml = `<p>合計（税込）: ¥${orderDetails.totalWithTax.toLocaleString()}</p>`;\r\n\r\n  // ✅ 全体 HTML 組み立て\r\n  const html = `\r\n    <p>${orderDetails.customerName} 様、</p>\r\n    <p>以下の内容でご注文を承りました：</p>\r\n    ${itemsHtml}\r\n    ${additionalHtml}\r\n    ${customHtml}\r\n    ${imageListHtml}\r\n    ${totalHtml}\r\n    ${commentHtml}\r\n    <p>ご利用ありがとうございました。</p>\r\n  `;\r\n\r\n  // ✅ メール送信\r\n  try {\r\n    await Promise.all(\r\n      recipients.map((to: string) =>\r\n        sendRealEmail({ to, subject, html })\r\n      )\r\n    );\r\n    return { success: true };\r\n  } catch (err: any) {\r\n    console.error(\"メール送信エラー:\", err);\r\n    if (err.response) {\r\n      console.error(\"Response data:\", err.response.data);\r\n      console.error(\"Response status:\", err.response.status);\r\n    }\r\n    return {\r\n      success: false,\r\n      message: \"メール送信に失敗しました。\",\r\n    };\r\n  }\r\n};\r\n\r\n\r\n// -------------------- 注文確定 --------------------\r\nconst submitOrder = async () => {\r\n  if (isSubmitting.value) return;\r\n  isSubmitting.value = true;\r\n\r\n  if (\r\n    !form.value.customerName ||\r\n    !form.value.email ||\r\n    !emailRegex.test(form.value.email)\r\n  ) {\r\n    alert(\"お名前と正しいメールアドレスを入力してください。\");\r\n    isSubmitting.value = false;\r\n    return;\r\n  }\r\n\r\n  const favoriteItems = favoritesStore.favoriteImages\r\n    .filter((item) => item.selectedType && item.quantity > 0)\r\n    .map((item) => ({\r\n      fileName: item.fileName,\r\n      name: item.selectedType,\r\n      quantity: item.quantity,\r\n      price: calculatePrice(item.selectedType, item.quantity),\r\n    }));\r\n\r\n  const additional = selectedAdditionalItems.value.map((item) => ({\r\n    id: item.id,\r\n    label: item.name,\r\n    quantity: item.quantity,\r\n    price: item.price,\r\n  }));\r\n\r\n  const customs = customItems.value.map((item) => ({\r\n    fileName: item.fileName || \"(ファイル名不明)\",\r\n    name: item.name || \"(名称未設定)\",\r\n    quantity: item.quantity,\r\n    price: item.price,\r\n  }));\r\n\r\n  const allItems = [...favoriteItems, ...additional, ...customs];\r\n  if (allItems.length === 0) {\r\n    alert(\"注文内容が空です。\");\r\n    isSubmitting.value = false;\r\n    return;\r\n  }\r\n\r\nconst orderDetails = {\r\n  customerName: form.value.customerName,\r\n  address: form.value.email,\r\n  comment: form.value.comment,\r\n  images: favoritesStore.favoriteImages.map((img) => ({\r\n    filename: img.fileName,\r\n    url: img.url\r\n  })), // ✅ 必要な情報のみ抽出して送る\r\n  customItems: customs,\r\n  additionalItems: additional,\r\n  total: totalPrice.value,\r\n  totalWithTax: totalPriceWithTax.value,\r\n};\r\n\r\n// ✅ このログを追加することで、送信直前の画像情報が正しく入っているか確認できます\r\nconsole.log(\"🧪 favoriteImages（送信前）:\", JSON.stringify(favoritesStore.favoriteImages, null, 2));\r\nconsole.log(\"🧪 orderDetails.images:\", JSON.stringify(orderDetails.images, null, 2));\r\n\r\n  const result = await sendEmailWrapper(orderDetails);\r\n\r\n  if (result.success) {\r\n    success.value = true;\r\n    error.value = \"\";\r\n    alert(\"ご注文ありがとうございました。確認メールを送信しました。\");\r\n\r\n    // フォームリセット\r\n    favoritesStore.favoriteImages = [];\r\n    customItems.value = [];\r\n    additionalItems.value.forEach((item) => (item.selected = false));\r\n    form.value = {\r\n      customerName: \"\",\r\n      email: \"\",\r\n      address: \"\",\r\n      comment: \"\",\r\n    };\r\n  } else {\r\n    success.value = false;\r\n    error.value = result.message || \"メール送信に失敗しました。\";\r\n    alert(\"ご注文は受け付けましたが、確認メールの送信に失敗しました。\");\r\n  }\r\n\r\n  isSubmitting.value = false;\r\n};\r\n\r\n\r\n// -------------------- 管理者機能 --------------------\r\nconst isAdmin = ref(false);\r\nconst user = { email: \"info@syashin8.com\" };\r\nif (ADMIN_EMAILS.includes(user.email)) {\r\n  isAdmin.value = true;\r\n  console.log(\"管理者モード\");\r\n}\r\nconst showAdminDashboard = () => {\r\n  console.log(\"ダッシュボード表示\");\r\n};\r\n\r\n// -------------------- 戻る --------------------\r\nconst goBack = () => router.go(-1);\r\n</script>\r\n\r\n<style scoped>\r\n/* ページヘッダー */\r\n.page-header {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n.back-button {\r\n  background-color: blue;\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n.back-button:hover {\r\n  background-color: darkblue;\r\n}\r\n\r\n/* お気に入りギャラリーのスタイル */\r\n\r\n.favorites-gallery {\r\n  padding: 20px;\r\n  margin-bottom: 30px;\r\n  background: #ffffff;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n}\r\n.favorites-gallery h3 {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n/* ★ 縦並びに変更 ★ */\r\n.favorites-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 16px;\r\n  justify-content: flex-start;\r\n}\r\n\r\n.favorite-item {\r\n  width: 200px;\r\n  padding: 10px;\r\n  border: 1px solid #eee;\r\n  border-radius: 4px;\r\n  background-color: #fafafa;\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n\r\n  display: flex; /* 横並びのデフォルト */\r\n  flex-direction: column; /* これで縦並びにします */\r\n  align-items: center; /* 中央寄せ */\r\n  font-size: 14px;\r\n}\r\n\r\n.favorite-item img {\r\n  width: 100%;\r\n  max-width: 150px; /* 最大幅150pxで制限 */\r\n  height: auto; /* アスペクト比を維持して高さを自動調整 */\r\n  object-fit: contain; /* 画像の全体を表示（トリミングしない） */\r\n  border: 1px solid #ccc;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.fav-image-name {\r\n  font-weight: bold;\r\n  margin-bottom: 6px;\r\n  max-width: 180px;\r\n  word-wrap: break-word;\r\n}\r\n\r\n.favorite-item select,\r\n.favorite-item input[type=\"number\"] {\r\n  width: 180px;\r\n  padding: 6px;\r\n  font-size: 14px;\r\n  margin-bottom: 6px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.order-details {\r\n  background-color: #f7f7f7;\r\n  padding: 8px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 13px;\r\n  max-width: 180px;\r\n  word-wrap: break-word;\r\n}\r\n\r\n/* 商品詳細エリア：３カラムレイアウト */\r\n.product-page {\r\n  display: flex;\r\n  gap: 20px;\r\n  padding: 20px;\r\n}\r\n.left-column {\r\n  flex: 1;\r\n  max-width: 30%;\r\n  display: flex;\r\n  flex-direction: column; /* 縦方向に並べる */\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.left-column img {\r\n  max-width: 100%;\r\n  height: auto;\r\n  border: 1px solid #ccc;\r\n}\r\n.center-column {\r\n  flex: 1;\r\n  max-width: 40%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n}\r\n.product-title {\r\n  font-size: 2rem;\r\n  margin-bottom: 10px;\r\n}\r\n.product-description {\r\n  font-size: 1.2rem;\r\n  margin-bottom: 15px;\r\n}\r\n.product-price {\r\n  font-weight: bold;\r\n  font-size: 1.5rem;\r\n}\r\n\r\n/* 右カラム：受注明細と受注フォーム */\r\n.right-column {\r\n  flex: 1;\r\n  max-width: 30%;\r\n  border-left: 1px solid #eee;\r\n  padding-left: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n}\r\n.right-column h2 {\r\n  margin-bottom: 10px;\r\n}\r\n.order-summary table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-bottom: 10px;\r\n}\r\n.order-summary table th,\r\n.order-summary table td {\r\n  border: 1px solid #ddd;\r\n  padding: 6px;\r\n  text-align: center;\r\n}\r\n.total {\r\n  text-align: right;\r\n  font-weight: bold;\r\n  margin-bottom: 20px;\r\n}\r\n.order-form form > div {\r\n  margin-bottom: 10px;\r\n}\r\n.order-form label {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\n.order-form input,\r\n.order-form textarea {\r\n  width: 100%;\r\n  padding: 4px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n}\r\n.order-form button {\r\n  background-color: #f0c14b;\r\n  border: 1px solid #a88734;\r\n  padding: 8px 12px;\r\n  cursor: pointer;\r\n}\r\n.order-form button:hover {\r\n  background-color: #e2b33b;\r\n}\r\n\r\n/* 商品が見つからない場合 */\r\n.not-found {\r\n  padding: 20px;\r\n  text-align: center;\r\n  font-size: 1.5rem;\r\n}\r\n/* 商品説明 */\r\n.desc-line {\r\n  line-height: 0.9; /* 好みの行の高さに調整してください */\r\n  margin: 0 0 8px; /* 行間を離したい場合の余白調整 */\r\n}\r\n/* 消費税 */\r\n.total-with-tax {\r\n  font-weight: bold;\r\n  margin-top: 10px;\r\n  color: #d35400; /* オレンジ系など強調色に */\r\n}\r\n\r\n/* メール送信テストフォーム */\r\n.manual-mail-form {\r\n  margin-top: 30px;\r\n  padding: 20px;\r\n  border-top: 1px solid #ddd;\r\n}\r\n.manual-mail-form form {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n}\r\n.manual-mail-form input,\r\n.manual-mail-form textarea {\r\n  width: 100%;\r\n  padding: 8px;\r\n}\r\n.manual-mail-form button {\r\n  background-color: #007bff33;\r\n  color: white;\r\n  padding: 8px 16px;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n.manual-mail-form button[disabled] {\r\n  background-color: #aaa;\r\n  cursor: not-allowed;\r\n}\r\n/* tailwind.css */\r\nhtml,\r\nbody,\r\n#__nuxt {\r\n  height: 100%;\r\n}\r\n</style>\r\n"],"names":["_withAsyncContext","error","_unref","_ssrInterpolate","_ssrRenderList","_ssrIncludeBooleanAttr","_ssrLooseContain","_ssrLooseEqual","_ssrRenderAttr","formTouched"],"mappings":"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"}